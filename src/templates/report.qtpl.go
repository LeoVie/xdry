// Code generated by qtc from "report.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/report.qtpl:1
package templates

//line templates/report.qtpl:1
import "x-dry-go/src/internal/service/aggregate"

//line templates/report.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/report.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/report.qtpl:3
func StreamReport(qw422016 *qt422016.Writer, cloneBundles []aggregate.CloneBundle) {
//line templates/report.qtpl:3
	qw422016.N().S(`
    <!doctype html>
    <html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
              integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" rel="stylesheet"
              crossorigin="anonymous" />
        <link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/styles/default.min.css"
              rel="stylesheet" />
        <title>xdry report</title>
    </head>
    <body>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
    <div class="container-fluid">
        <div class="row">
            <div class="col-10">
                <h1>xdry report</h1>
            </div>
            <div class="col-2 text-end">
                <a class="btn btn-success mt-3" href="http://xdry.leovie.de" target="_blank">xdry.leovie.de</a>
            </div>
        </div>

        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            `)
//line templates/report.qtpl:33
	for _, cloneBundle := range cloneBundles {
//line templates/report.qtpl:33
		qw422016.N().S(`
                <button class="nav-link`)
//line templates/report.qtpl:34
		if cloneBundle.CloneType == 1 {
//line templates/report.qtpl:34
			qw422016.N().S(` active`)
//line templates/report.qtpl:34
		}
//line templates/report.qtpl:34
		qw422016.N().S(`" id="nav-type-`)
//line templates/report.qtpl:34
		qw422016.N().D(cloneBundle.CloneType)
//line templates/report.qtpl:34
		qw422016.N().S(`-clones-tab" data-bs-toggle="tab"
                        data-bs-target="#nav-type-`)
//line templates/report.qtpl:35
		qw422016.N().D(cloneBundle.CloneType)
//line templates/report.qtpl:35
		qw422016.N().S(`-clones">Type `)
//line templates/report.qtpl:35
		qw422016.N().D(cloneBundle.CloneType)
//line templates/report.qtpl:35
		qw422016.N().S(` Clones
                </button>
            `)
//line templates/report.qtpl:37
	}
//line templates/report.qtpl:37
	qw422016.N().S(`
        </div>
        <div class="tab-content" id="nav-tabContent">
            `)
//line templates/report.qtpl:40
	for _, cloneBundle := range cloneBundles {
//line templates/report.qtpl:40
		qw422016.N().S(`
                <div class="tab-pane fade show`)
//line templates/report.qtpl:41
		if cloneBundle.CloneType == 1 {
//line templates/report.qtpl:41
			qw422016.N().S(` active`)
//line templates/report.qtpl:41
		}
//line templates/report.qtpl:41
		qw422016.N().S(`"
                     id="nav-type-`)
//line templates/report.qtpl:42
		qw422016.N().D(cloneBundle.CloneType)
//line templates/report.qtpl:42
		qw422016.N().S(`-clones"
                     role="tabpanel"
                     aria-labelledby="nav-type-`)
//line templates/report.qtpl:44
		qw422016.N().D(cloneBundle.CloneType)
//line templates/report.qtpl:44
		qw422016.N().S(`-clones-tab">

                    <h3>Detected `)
//line templates/report.qtpl:46
		qw422016.N().D(len(cloneBundle.AggregatedClones))
//line templates/report.qtpl:46
		qw422016.N().S(` clone`)
//line templates/report.qtpl:46
		if len(cloneBundle.AggregatedClones) != 1 {
//line templates/report.qtpl:46
			qw422016.N().S(`s`)
//line templates/report.qtpl:46
		}
//line templates/report.qtpl:46
		qw422016.N().S(`</h3>

                    <div class="row">
                        `)
//line templates/report.qtpl:49
		for cloneIndex, aggregatedClone := range cloneBundle.AggregatedClones {
//line templates/report.qtpl:49
			qw422016.N().S(`
                            <div class="col-4">
                                <card class="card">
                                    <div class="card-body">
                                        <a id="type_`)
//line templates/report.qtpl:53
			qw422016.N().D(cloneBundle.CloneType)
//line templates/report.qtpl:53
			qw422016.N().S(`_clone_`)
//line templates/report.qtpl:53
			qw422016.N().D(cloneIndex)
//line templates/report.qtpl:53
			qw422016.N().S(`" href="#type_`)
//line templates/report.qtpl:53
			qw422016.N().D(cloneBundle.CloneType)
//line templates/report.qtpl:53
			qw422016.N().S(`_clone_`)
//line templates/report.qtpl:53
			qw422016.N().D(cloneIndex)
//line templates/report.qtpl:53
			qw422016.N().S(`">
                                            <span class="badge bg-secondary">Clone `)
//line templates/report.qtpl:54
			qw422016.N().D(cloneIndex)
//line templates/report.qtpl:54
			qw422016.N().S(`</span>
                                        </a>
                                        <pre><code class="language-`)
//line templates/report.qtpl:56
			qw422016.E().S(aggregatedClone.Language)
//line templates/report.qtpl:56
			qw422016.N().S(`">`)
//line templates/report.qtpl:56
			qw422016.E().S(aggregatedClone.Content)
//line templates/report.qtpl:56
			qw422016.N().S(`</code></pre>
                                        <table class="table">
                                            <thead>
                                                 <tr>
                                                    <th scope="col">#</th>
                                                    <th scope="col">File</th>
                                                    <th scope="col">File position</th>
                                                 </tr>
                                            </thead>
                                            <tbody>
                                                `)
//line templates/report.qtpl:66
			for cloneInstanceIndex, cloneInstance := range aggregatedClone.Instances {
//line templates/report.qtpl:66
				qw422016.N().S(`
                                                    <tr>
                                                        <th scope="row">`)
//line templates/report.qtpl:68
				qw422016.N().D(cloneInstanceIndex)
//line templates/report.qtpl:68
				qw422016.N().S(`</th>
                                                        <td>`)
//line templates/report.qtpl:69
				qw422016.E().S(cloneInstance.Path)
//line templates/report.qtpl:69
				qw422016.N().S(`</td>
                                                        <td>`)
//line templates/report.qtpl:70
				qw422016.N().D(cloneInstance.Index)
//line templates/report.qtpl:70
				qw422016.N().S(`</td>
                                                    </tr>
                                                `)
//line templates/report.qtpl:72
			}
//line templates/report.qtpl:72
			qw422016.N().S(`
                                            </tbody>
                                        </table>
                                    </div>
                                </card>
                            </div>
                        `)
//line templates/report.qtpl:78
		}
//line templates/report.qtpl:78
		qw422016.N().S(`
                    </div>

                </div>
            `)
//line templates/report.qtpl:82
	}
//line templates/report.qtpl:82
	qw422016.N().S(`
        </div>
    </div>
    </body>
    </html>
`)
//line templates/report.qtpl:87
}

//line templates/report.qtpl:87
func WriteReport(qq422016 qtio422016.Writer, cloneBundles []aggregate.CloneBundle) {
//line templates/report.qtpl:87
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/report.qtpl:87
	StreamReport(qw422016, cloneBundles)
//line templates/report.qtpl:87
	qt422016.ReleaseWriter(qw422016)
//line templates/report.qtpl:87
}

//line templates/report.qtpl:87
func Report(cloneBundles []aggregate.CloneBundle) string {
//line templates/report.qtpl:87
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/report.qtpl:87
	WriteReport(qb422016, cloneBundles)
//line templates/report.qtpl:87
	qs422016 := string(qb422016.B)
//line templates/report.qtpl:87
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/report.qtpl:87
	return qs422016
//line templates/report.qtpl:87
}
